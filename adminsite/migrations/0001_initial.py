# Generated by Django 4.2.7 on 2024-02-19 13:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.IntegerField(db_column='Admin_id', primary_key=True, serialize=False)),
                ('admin_name', models.CharField(db_column='Admin_name', max_length=20)),
                ('password', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('bill_id', models.IntegerField(db_column='Bill_id', primary_key=True, serialize=False)),
                ('shipping_charges', models.FloatField()),
                ('order_date', models.DateField(db_column='Order_date')),
                ('total', models.FloatField(db_column='Total')),
            ],
            options={
                'db_table': 'billing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.IntegerField(db_column='Category_id', primary_key=True, serialize=False)),
                ('category_name', models.CharField(db_column='Category_name', max_length=15)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.IntegerField(db_column='Customer_id', primary_key=True, serialize=False)),
                ('customer_fname', models.CharField(db_column='Customer_fname', max_length=15)),
                ('customer_lname', models.CharField(db_column='Customer_lname', max_length=15)),
                ('contact_number', models.IntegerField(db_column='Contact_number')),
                ('customer_gender', models.CharField(db_column='Customer_gender', max_length=6)),
                ('customer_dob', models.DateField(db_column='Customer_dob')),
                ('customer_email', models.CharField(db_column='Customer_email', max_length=30)),
                ('customer_password', models.IntegerField(db_column='Customer_password')),
                ('address', models.CharField(db_column='Address', max_length=100)),
                ('customer_pincode', models.IntegerField(db_column='Customer_pincode')),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('d_id', models.IntegerField(db_column='D_id', primary_key=True, serialize=False)),
                ('address', models.CharField(db_column='Address', max_length=100)),
                ('d_date', models.DateField(db_column='D_date')),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'delivery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emp_id', models.IntegerField(db_column='Emp_id', primary_key=True, serialize=False)),
                ('emp_name', models.CharField(db_column='Emp_name', max_length=30)),
                ('emp_dob', models.DateField(db_column='Emp_dob')),
                ('contact_number', models.IntegerField(db_column='Contact_number')),
                ('emp_salary', models.IntegerField(db_column='Emp_salary')),
                ('work_experience', models.CharField(blank=True, db_column='Work_experience', max_length=10, null=True)),
                ('emp_joindate', models.DateField(db_column='Emp_joindate')),
                ('emp_leavedate', models.DateField(blank=True, db_column='Emp_leavedate', null=True)),
                ('qualification', models.CharField(blank=True, db_column='Qualification', max_length=30, null=True)),
            ],
            options={
                'db_table': 'employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('f_id', models.IntegerField(db_column='F_id', primary_key=True, serialize=False)),
                ('f_date', models.DateField(blank=True, db_column='F_date', null=True)),
                ('feedback', models.CharField(blank=True, db_column='Feedback', max_length=100, null=True)),
            ],
            options={
                'db_table': 'feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('offer_id', models.IntegerField(db_column='Offer_id', primary_key=True, serialize=False)),
                ('start_date', models.DateField(db_column='Start_date')),
                ('end_date', models.DateField(db_column='End_date')),
                ('description', models.CharField(db_column='Description', max_length=100)),
            ],
            options={
                'db_table': 'offer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Order1',
            fields=[
                ('order_id', models.IntegerField(db_column='Order_id', primary_key=True, serialize=False)),
                ('order_date', models.DateField(db_column='Order_date')),
                ('order_quantity', models.IntegerField(db_column='Order_quantity')),
                ('payment', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'order1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.IntegerField(db_column='Product_id', primary_key=True, serialize=False)),
                ('product_name', models.CharField(db_column='Product_name', max_length=30)),
                ('material', models.CharField(max_length=20)),
                ('image', models.ImageField(upload_to='productimg')),
                ('product_price', models.IntegerField(db_column='Product_price')),
                ('product_weight', models.CharField(db_column='Product_weight', max_length=10)),
                ('product_quantity', models.CharField(db_column='Product_quantity', max_length=10)),
                ('product_color', models.CharField(db_column='Product_color', max_length=10)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('production_id', models.IntegerField(db_column='Production_id', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('production_cost', models.FloatField(db_column='Production_cost')),
                ('production_date', models.DateField(db_column='Production_date')),
            ],
            options={
                'db_table': 'production',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('purchase_id', models.IntegerField(primary_key=True, serialize=False)),
                ('material', models.CharField(max_length=30)),
                ('quantity', models.IntegerField()),
                ('amount', models.FloatField(db_column='Amount')),
            ],
            options={
                'db_table': 'purchase',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('raw_id', models.IntegerField(db_column='Raw_id', primary_key=True, serialize=False)),
                ('raw_name', models.CharField(db_column='Raw_name', max_length=20)),
                ('raw_quantity', models.CharField(db_column='Raw_quantity', max_length=20)),
            ],
            options={
                'db_table': 'raw_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recycling',
            fields=[
                ('r_id', models.IntegerField(db_column='R_id', primary_key=True, serialize=False)),
                ('r_date', models.DateField(db_column='R_date')),
                ('quantity', models.CharField(db_column='Quantity', max_length=10)),
            ],
            options={
                'db_table': 'recycling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('sales_id', models.IntegerField(db_column='Sales_id', primary_key=True, serialize=False)),
                ('sales_date', models.DateField(db_column='Sales_date')),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'sales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('stock_id', models.IntegerField(db_column='Stock_id', primary_key=True, serialize=False)),
                ('r_id', models.IntegerField(blank=True, db_column='R_id', null=True)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('material_quantity', models.CharField(db_column='Material_Quantity', max_length=10)),
            ],
            options={
                'db_table': 'stock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('sup_id', models.IntegerField(db_column='Sup_id', primary_key=True, serialize=False)),
                ('sup_name', models.CharField(db_column='Sup_name', max_length=30)),
                ('contact_number', models.IntegerField(db_column='Contact_number')),
                ('sup_address', models.CharField(db_column='Sup_address', max_length=100)),
                ('sup_email', models.CharField(db_column='Sup_email', max_length=30)),
            ],
            options={
                'db_table': 'supplier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('work_id', models.IntegerField(db_column='Work_id', primary_key=True, serialize=False)),
                ('work_name', models.CharField(db_column='Work_name', max_length=20)),
            ],
            options={
                'db_table': 'work',
                'managed': False,
            },
        ),
    ]
